name: Release

on:
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  github-release:
    environment: Release
    runs-on: ubuntu-latest
    if: startsWith(github.event.pull_request.title, '[RELEASE] ') &&
      github.event.pull_request.merged == true
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - name: Configure Git
        run: |
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "github@actions.ci"

      - name: Add local bin paths
        run: |
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Rust-Cache for Github actions
        uses: Swatinem/rust-cache@v1

      - name: Install `quickinstall`
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-quickinstall

      - name: Install `unclog`
        uses: actions-rs/cargo@v1
        with:
          command: quickinstall
          args: unclog

      - name: Parse release version
        run: |
          echo "RELEASE_VERSION=`sed 's/^\[RELEASE\] v//g' <<< "${{ github.event.pull_request.title }}"`" >> $GITHUB_ENV

      - name: Tag on main and make a Github release
        run: ./scripts/github_release.sh

      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Rust publish
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --token ${{ secrets.CRATES_IO_TOKEN }} --package modelator

      - name: Setup Go
        uses: actions/setup-go@v2

      - name: Golang publish
        run: |
          # GOPROXY=proxy.golang.org go list -m github.com/${{ github.repository }}
          echo "Skipping Go package"

      - name: Setup Python
        uses: actions/setup-python@v1

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v7

      - name: Poetry publish
        run: |
          # poetry publish --build
          echo "Skipping Python package"
